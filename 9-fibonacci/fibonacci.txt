1. Exercise: 
		- Run the mini-test based fibonacci and make sure all tests pass:
			$ ruby 9-fibonacci/fibonacci_test.rb
		- Move the fibonacci class into its own file and make all the tests pass
2. Exercise:
    - Convert the given mini-test test to rspec version fibonacci_spec.rb.
3. Optional:
	  - Get the output of the mini-test in color.
	
Note : Following version is missing in the source control.

Version 7 :

# input | output
# 0         0
# 1         1
# 2         1
# 3         2
# So the pattern emerges and we see the result is the sum of previous to fibonacci numbers
# return 2 is actually return 1 + 1 which from the above table is fib(n-1) + fib(n-2)
# so the solution is fib(n-1) + fib(n-2)

class Fibonacci
  def self.of(number)
    if number == 0
      return 0
    elsif number <= 2
      return 1
    end
    return 2
  end
end

class FibonacciTest < Test::Unit::TestCase
  def test_fibonacci_of_zero_is_zero
    fib_of_zero = Fibonacci.of(0)
    assert_equal(0, fib_of_zero)
  end
  
  def test_fibonacci_of_one_is_one
    fib_of_one = Fibonacci.of(1)
    assert_equal(1, fib_of_one)
  end
  
  def test_fibonacci_of_two_is_one
    fib_of_two = Fibonacci.of(2)
    assert_equal(1, fib_of_two)
  end
  
  def test_fibonacci_of_three_is_two
    fib_of_three = Fibonacci.of(3)
    assert_equal(2, fib_of_three)
  end
end